<?php
/**
 * @method Df_1C_Cml2_Export_Document_Catalog getDocument()
 */
class Df_1C_Cml2_Export_Processor_Catalog_Product extends Df_Catalog_Model_XmlExport_Product {
	/**
	 * Структуру данных получил из анализа программного кода
	 * обработки «Б_ПомощникИмпортаТоваровБитрикс»
	 * (в частности, смотрите метод «ОбработатьЗначениеЭлемента»)
	 * @override
	 * @return array(string => mixed)
	 */
	public function getResult() {
		return df_clean_xml(array(
			/**
			 * Поле «Ид» недопустимо здесь по текущей версии 2.08 стандарта CommerceML 2
			 * http://v8.1c.ru/edi/edi_stnd/90/CML208.XSD
			 * Его наличие здесь нарушает этот стандарт:
			 * вместо размещения здесь поле «Ид» должно размещаться
			 * внутри блока «ИдентификаторТовара».
			 * Однако текущая версия 4.0.5.2 «Помощника импорта товаров с сайта»
			 * дополнения 1С-Битрикс для обмена данными с интернет-магазином
			 * http://www.1c-bitrix.ru/download/1c/ecommerce/4.0.5.2_UT11.1.9.61.zip
			 * требует размещения поля «Ид» именно здесь.
			 */
			'Ид' => $this->getExternalId()
			/**
			 * Поле «Артикул» недопустимо здесь по текущей версии 2.08 стандарта CommerceML 2
			 * http://v8.1c.ru/edi/edi_stnd/90/CML208.XSD
			 * Его наличие здесь нарушает этот стандарт:
			 * вместо размещения здесь поле «Артикул» должно размещаться
			 * внутри блока «ИдентификаторТовара».
			 * Однако текущая версия 4.0.5.2 «Помощника импорта товаров с сайта»
			 * дополнения 1С-Битрикс для обмена данными с интернет-магазином
			 * http://www.1c-bitrix.ru/download/1c/ecommerce/4.0.5.2_UT11.1.9.61.zip
			 * требует размещения поля «Артикул» именно здесь.
			 */
			,'Артикул' => $this->getProduct()->getSku()
			/**
			 * Текущая версия 4.0.5.2 «Помощника импорта товаров с сайта»
			 * дополнения 1С-Битрикс для обмена данными с интернет-магазином
			 * http://www.1c-bitrix.ru/download/1c/ecommerce/4.0.5.2_UT11.1.9.61.zip
			 * блок «ИдентификаторТовара» не обрабатывает,
			 * однако этот блок возможен по текущей версии 2.08 стандарта CommerceML 2
			 * http://v8.1c.ru/edi/edi_stnd/90/CML208.XSD
			 */
			,'ИдентификаторТовара' => $this->getOutput_ИдентификаторТовара()
			,'Наименование' => df_cdata($this->getProduct()->getName())
			,'БазоваяЕдиница' => $this->entry()->unit()
			/**
			 * Текущая версия 4.0.5.2 «Помощника импорта товаров с сайта»
			 * дополнения 1С-Битрикс для обмена данными с интернет-магазином
			 * http://www.1c-bitrix.ru/download/1c/ecommerce/4.0.5.2_UT11.1.9.61.zip
			 * поле «ИдТовараУКонтрагента» не обрабатывает,
			 * однако это поле возможен по текущей версии 2.08 стандарта CommerceML 2
			 * http://v8.1c.ru/edi/edi_stnd/90/CML208.XSD
			 */
			,'ИдТовараУКонтрагента' => $this->getProduct()->getId()
			,'Группы' => $this->getOutput_Группы()
			,'Описание' => df_cdata($this->getProduct()->getDescription())
			/**
			 * Согласно стандарту CommerceML 2 (2.08) картинок может быть несколько:
			 * http://v8.1c.ru/edi/edi_stnd/90/CML208.XSD
			 * 1С отлично умеет импортировать все картинки.
			 * При этот на основном экране товарной карточке отображается только главная картинка,
			 * а остальные картинки отображаются на вкладке «Присоединённые файлы».
			 */
			,'Картинка' => $this->getImageUrls()
			/**
			 * Текущая версия 4.0.5.2 «Помощника импорта товаров с сайта»
			 * дополнения 1С-Битрикс для обмена данными с интернет-магазином
			 * http://www.1c-bitrix.ru/download/1c/ecommerce/4.0.5.2_UT11.1.9.61.zip
			 * блок «Производитель» не обрабатывает,
			 * однако этот блок возможен по текущей версии 2.08 стандарта CommerceML 2
			 * http://v8.1c.ru/edi/edi_stnd/90/CML208.XSD
			 */
			,'Производитель' => $this->getOutput_Производитель()
			/**
			 * Из стандарта CommerceML 2.08:
			 * «Описывает значения свойств (характеристик) номенклатурной позиции
			 * в соответствии с указанным классификатором.
			 * Если классификатор не указан, то включать данный элемент не имеет смысла.»
			 * Я так понимаю, эта фраза означает,
			 * что имеет смысл указывать значения только тех свойств,
			 * которые описаны в ветке «Классификатор/Свойства».
			 * http://v8.1c.ru/edi/edi_stnd/90/CML208.XSD
			 */
			,'ЗначенияСвойств' => $this->getOutput_ЗначенияСвойств()
			/**
			 * Текущая версия 4.0.5.2 «Помощника импорта товаров с сайта»
			 * дополнения 1С-Битрикс для обмена данными с интернет-магазином
			 * http://www.1c-bitrix.ru/download/1c/ecommerce/4.0.5.2_UT11.1.9.61.zip
			 * блок «СтавкиНалогов» не обрабатывает,
			 * однако этот блок возможен по текущей версии 2.08 стандарта CommerceML 2.
			 * http://v8.1c.ru/edi/edi_stnd/90/CML208.XSD
			 */
			,'СтавкиНалогов' => ''
			/**
			 * Текущая версия 4.0.5.2 «Помощника импорта товаров с сайта»
			 * дополнения 1С-Битрикс для обмена данными с интернет-магазином
			 * http://www.1c-bitrix.ru/download/1c/ecommerce/4.0.5.2_UT11.1.9.61.zip
			 * блок «Акцизы» не обрабатывает,
			 * однако этот блок возможен по текущей версии 2.08 стандарта CommerceML 2.
			 * http://v8.1c.ru/edi/edi_stnd/90/CML208.XSD
			 */
			,'Акцизы' => ''
			/**
			 * Текущая версия 4.0.5.2 «Помощника импорта товаров с сайта»
			 * дополнения 1С-Битрикс для обмена данными с интернет-магазином
			 * http://www.1c-bitrix.ru/download/1c/ecommerce/4.0.5.2_UT11.1.9.61.zip
			 * блок «Комплектующие» не обрабатывает,
			 * однако этот блок возможен по текущей версии 2.08 стандарта CommerceML 2:
			 * «Для изделий, содержащих комплектующие».
			 * http://v8.1c.ru/edi/edi_stnd/90/CML208.XSD
			 */
			,'Комплектующие' => ''
			/**
			 * Текущая версия 4.0.5.2 «Помощника импорта товаров с сайта»
			 * дополнения 1С-Битрикс для обмена данными с интернет-магазином
			 * http://www.1c-bitrix.ru/download/1c/ecommerce/4.0.5.2_UT11.1.9.61.zip
			 * блок «Аналоги» не обрабатывает,
			 * однако этот блок возможен по текущей версии 2.08 стандарта CommerceML 2:
			 * «Аналоги товара, например для медикаментов другие лекарства, заменяющие данное».
			 * http://v8.1c.ru/edi/edi_stnd/90/CML208.XSD
			 */
			,'Аналоги' => ''
			/**
			 * Текущая версия 4.0.5.2 «Помощника импорта товаров с сайта»
			 * дополнения 1С-Битрикс для обмена данными с интернет-магазином
			 * http://www.1c-bitrix.ru/download/1c/ecommerce/4.0.5.2_UT11.1.9.61.zip
			 * блок «ХарактеристикиТовара» в данном контексте не обрабатывает
			 * (блок «ХарактеристикиТовара» обрабатывается в ветке XML
			 * ПакетПредложений/Предложения/Предложение/ХарактеристикиТовара,
			 * то есть, в контексте Предложений, а не Товаров),
			 * однако этот блок возможен по текущей версии 2.08 стандарта CommerceML 2
			 * http://v8.1c.ru/edi/edi_stnd/90/CML208.XSD
			 */
			,'ХарактеристикиТовара' => ''
			/**
			 * Текущая версия 4.0.5.2 «Помощника импорта товаров с сайта»
			 * дополнения 1С-Битрикс для обмена данными с интернет-магазином
			 * http://www.1c-bitrix.ru/download/1c/ecommerce/4.0.5.2_UT11.1.9.61.zip
			 * блок «ЗначенияРеквизитов» не обрабатывает,
			 * однако этот блок возможен по текущей версии 2.08 стандарта CommerceML 2:
			 * «Дополнительные значения реквизитов товара».
			 * http://v8.1c.ru/edi/edi_stnd/90/CML208.XSD
			 */
			,'ЗначенияРеквизитов' => $this->getOutput_ЗначенияРеквизитов()
			/**
			 * Поле «Вес» недопустимо здесь по текущей версии 2.08 стандарта CommerceML 2
			 * http://v8.1c.ru/edi/edi_stnd/90/CML208.XSD
			 * Его наличие здесь нарушает этот стандарт.
			 * Однако текущая версия 4.0.5.2 дополнения 1С-Битрикс
			 * для обмена данными с интернет-магазином
			 * передаёт вес именно таким способом.
			 * http://www.1c-bitrix.ru/download/1c/ecommerce/4.0.5.2_UT11.1.9.61.zip
			 * И хотя текущая версия «Помощника импорта товаров с сайта»
			 * дополнения 1С-Битрикс для обмена данными с интернет-магазином
			 * поле «Вес» не обрабатывает, однако пусть оно здесь будет.
			 */
			,'Вес' => $this->getВес()
		));
	}

	/**
	 * @override
	 * @return bool
	 */
	public function isEligible() {
		return
				// Не экспортируем в ветку «Каталог/Товары» товары,
				// которые видны на витрине лишь как часть других товаров
				// (вместо этого они, возможно, будут экспортированы в ветку
				// «ПакетПредложений/Предложения»).
				$this->getProduct()->isVisibleInSiteVisibility()
			&&
				// Не экспортируем в ветку «Каталог/Товары»
				// составные части настраиаемых товаров
				// (вместо этого они будут экспортированы в ветку
				// «ПакетПредложений/Предложения»).
				!$this->getProduct()->isConfigurableChild()
		;
	}

	/** @return Df_1C_Cml2_Export_Entry */
	protected function entry() {return Df_1C_Cml2_Export_Entry::s();}

	/** @return array(string => string[]) */
	private function getOutput_Группы() {
		/** @uses Df_Catalog_Model_Category::get1CId() */
		return array('Ид' => df_each($this->getCategories(), 'get1CId'));
	}

	/** @return array(string => string[]) */
	private function getOutput_ЗначенияРеквизитов() {
		return array(
			array('ЗначениеРеквизита' => $this->entry()->name(
				'ВидНоменклатуры', $this->getProduct()->getAttributeSet()->getAttributeSetName()
			))
		);
	}

	/** @return array(string => string[]) */
	private function getOutput_ЗначенияСвойств() {
		/** @var array(array(string => string)) $attributeValues */
		$attributeValues = array();
		foreach ($this->getDocument()->getCatalogAttributes() as $attribute) {
			/** @var Df_Catalog_Model_Resource_Eav_Attribute $attribute */
			/** @var Df_1C_Cml2_Export_Processor_Catalog_Attribute_Real $processor */
			$processor = $this->getDocument()->getProcessorForAttribute($attribute);
			if ($processor->isEligible()) {
				$attributeValues[]= $processor->getЗначенияСвойства($this->getProduct());
			}
		}
		foreach ($this->getDocument()->getProcessorsForVirtualAttributes() as $processor) {
			/** @var Df_1C_Cml2_Export_Processor_Catalog_Attribute $processor */
			if ($processor->isEligible()) {
				$attributeValues[]= $processor->getЗначенияСвойства($this->getProduct());
			}
		}
		return df_clean_xml(array('ЗначенияСвойства' => df_clean($attributeValues)));
	}

	/** @return array(string => string) */
	private function getOutput_ИдентификаторТовара() {
		return df_clean_xml(array(
			'Ид' => $this->getExternalId()
			,'Штрихкод' => ''
			,'Артикул' => $this->getProduct()->getSku()
		));
	}

	/** @return array(string => string) */
	private function getOutput_Производитель() {
		return df_clean_xml(array(
			'Страна' => $this->getCountryNameRussian()
			,'ТорговаяМарка' => df_cdata($this->getProduct()->getManufacturerName())
		));
	}

	/**
	 * Обратите внимание,
	 * что мы не можем в качестве идентификатора товара
	 * передать в 1С идентификатор товара Magento,
	 * потому что при следующих сеансах обмена
	 * 1С может передать этот товар обратно в интернет-магазин
	 * с указанием данного идентификатора, и возникнет 2 проблемы:
	 * 1) Лежащая на поверхности, просто обходимая проблема.
	 * Текущий код Российской сборки Magento модуля обмена c 1С
	 * ожидает получить в качестве идентификатора именно идентификатор в формате 1С
	 * (типа «cbcf492e-55bc-11d9-848a-00112f43529a»),
	 * а не идентификатор в формате Magento (типа «249»).
	 * Разумеется, эта проблема легко обходима доработкой кода Российской сборки Magento.
	 * 2) Действительная проблема, менее очевидная.
	 * Даже если решить проблему пункта 1 (что несложно), то возникнет на самом деле сложная проблема:
	 * при синхронизации с 1С сразу нескольких систем Magento как установить,
	 * к какой конкретно системе относиться идентификатор товара типа «249»?
	 * Никак.
	 * По этой же причине не используем в качестве внешнего идентификатора артикул товара.
	 *
	 * Вот это и есть реальная причина, почему в качестве идентификатора товара
	 * надо передавать в 1С именно глобальный идентификатор,
	 * причем именно в формате ожидаемом 1С (типа «cbcf492e-55bc-11d9-848a-00112f43529a»),
	 * чтобы 1С корректно его обрабатывала и, например, не возникало проблемы,
	 * когда наш идентификатор длиннее допустимого 1С.
	 *
	 * Если у товара в Magento отсутствует внешний идентификатор 1С,
	 * то создаём такой идентификатор присваиваем его товару (сохраняем товар).
	 *
	 * Обратите внимание,
	 * что не только у товара может отсутствовать значение внешнего идентификатора 1С,
	 * но и у прикладного типа данного товара вообще может отсутствовать свойство
	 * для хранения внешнего идентификатора 1С,
	 * поэтому при необходимости надо добавить к прикладному типу товаров данное свойство.
	 *
	 * Обратите внимание,
	 * что оба сценария (отсутствие у товара внешнего идентификатора 1С
	 * и отсутствие у прикладного типа товара свойства для хранения внешнего идентификатора 1С)
	 * воплотятся с очень высокой долей вероятности,
	 * потому что раз администратор запускает экспорт товаров из интернет-магазина в 1С —
	 * значит, эти товары (по мнению администратора и наверняка в реальности)
	 * отсутствуют в 1С, и, соответственно, никаких внешних идентификаторов 1С у них ещё нет.
	 *
	 * @return string
	 */
	private function getExternalId() {
		if (!isset($this->{__METHOD__})) {
			if (!$this->getProduct()->get1CId()) {
				Df_1C_Cml2_Processor_Product_AddExternalId::p($this->getProduct(), df_t()->guid());
			}
			$this->{__METHOD__} = $this->getProduct()->get1CId();
		}
		return $this->{__METHOD__};
	}

	/** @return string|null */
	private function getВес() {
		return
			!$this->getProduct()->getWeightRaw($canLoadFull = false, $canUseConfig = false)
			? null
			: df_number_2f($this->getProduct()->getWeightInKilogrammes())
		;
	}

	/** @used-by Df_1C_Cml2_Export_Document_Catalog::getProcessorClass_products() */

}