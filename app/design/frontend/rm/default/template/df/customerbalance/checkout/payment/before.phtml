<?php /** @var Df_CustomerBalance_Block_Checkout_Payment $this */ ?>
<?php if ($this->isDisplayContainer()): ?>
    <div class="checkout-onepage-payment-additional-customerbalance" id="customerbalance_placer">
        <input type="hidden" name="payment[use_customer_balance]" value="0" />
        <input type="checkbox" class="checkbox" name="payment[use_customer_balance]" value="1" id="use_customer_balance" <?php echo($this->isCustomerBalanceUsed() ? 'checked' : '') ?>/>
        <?php $balance = Mage::helper('core')->currency($this->getBalance()); ?>
        <label for="use_customer_balance">
        <strong>
            <?php echo Df_CustomerBalance_Helper_Data::s()->__('Use Store Credit'); ?>
           (<span id="customerbalance_available_amount"><?php echo $balance; ?></span>
            <?php echo Df_CustomerBalance_Helper_Data::s()->__('available'); ?>)
        </strong>
        </label>
    </div>
    <script type="text/javascript">
    //<![CDATA[
    var isFullyPaidAfterCustomerBalanceApplication = <?php echo($this->isFullyPaidAfterApplication() ? 'true' : 'false'); ?>;
    var customerBalanceSubstracted = <?php if ($this->isCustomerBalanceUsed()): ?>true<?php else: ?>false<?php endif; ?>;
    if (customerBalanceSubstracted) {
        quoteBaseGrandTotal += <?php echo(float)rm_quote()->getBaseCustomerBalanceAmountUsed(); ?>;
        customerBalanceSubstracted = false;
    }
    Payment.prototype.switchCustomerBalanceCheckbox = function() {
        if (!customerBalanceSubstracted && $('use_customer_balance').checked) {
            quoteBaseGrandTotal -= <?php echo(float)$this->getBalance(); ?>;
            customerBalanceSubstracted = true;
        }
        if (customerBalanceSubstracted && !$('use_customer_balance').checked) {
            quoteBaseGrandTotal += <?php echo(float)$this->getBalance(); ?>;
            customerBalanceSubstracted = false;
        }
        if (quoteBaseGrandTotal < 0.0001) {
            var elements = Form.getElements(this.form);
            for(var i=0; i<elements.length; i++) {
                if ($('use_customer_balance').checked) {
                    if (elements[i].name == 'payment[method]') {
                        elements[i].disabled = true;
                    }
                }
                if (elements[i].name == 'payment[method]' && elements[i].value == 'free') {
                    elements[i].checked = false;
                    elements[i].disabled = true;
                   (elements[i].parentNode).hide();
                }
            }
            if ($('use_customer_balance').checked) {
                $('checkout-payment-method-load').hide();
            }
        } else {
            var elements = Form.getElements(this.form);
            for(var i=0; i<elements.length; i++) {
                if (elements[i].name == 'payment[method]') {
                    elements[i].disabled = false;
                }
            }
            $('checkout-payment-method-load').show();
        }
    }
    if (payment) {
        var customerBalanceInit = function() {
            if ($('use_customer_balance')) {
                $('use_customer_balance').disabled = false;
            }
            this.switchCustomerBalanceCheckbox();
        }
        payment.addAfterInitFunction('customerbalance', customerBalanceInit.bind(payment));
        var customerBalanceValidate = function() {
            if (quoteBaseGrandTotal < 0.0001) {
                return true;
            }
            return false;
        }
        payment.addBeforeValidateFunction('customerbalance', customerBalanceValidate.bind(payment));
    }
    Event.observe($('use_customer_balance'), 'change', payment.switchCustomerBalanceCheckbox);
    //]]>
    </script>
<?php endif; ?>
