<?php /** @var Df_Reward_Block_Checkout_Payment $this */ ?>
<?php if ($this->getCanUseRewardPoints()): ?>
<dl class="checkout-reward checkout-onepage-payment-additional-reward" id="reward_placer">
    <dt>
        <input type="checkbox" name="payment[use_reward_points]" value="1" id="use_reward_points"<?php echo $this->useRewardPoints()?' checked="checked"':'' ?> class="checkbox" />
		<label
			for="use_reward_points"
		>
			<strong>
				<?php
					echo
						sprintf(
							'потратить баллы<br/>(у Вас %s = %s)'
							,
							df_h()->reward()->getPointsAmountAsText(
								$this->getPointsBalance()
							)
							,
							df_h()->reward()->formatAmount(
								$this->getCurrencyAmount()
							)
						)
					;
				?>
			</strong>
		</label>
    </dt>
</dl>
<script type="text/javascript">
//<![CDATA[
    var isEnoughPointsToCoverAmount = <?php if ($this->isEnoughPoints()): ?>true<?php else: ?>false<?php endif; ?>;
    var rewardPointsSubstracted = <?php if ($this->useRewardPoints()): ?>true<?php else: ?>false<?php endif; ?>;
    if (rewardPointsSubstracted) {
        quoteBaseGrandTotal += <?php echo(float)df_quote()->getBaseRewardCurrencyAmount(); ?>;
        rewardPointsSubstracted = false;
    }
    Payment.prototype.switchRewardPointsCheckbox = function() {
        if (!rewardPointsSubstracted && $('use_reward_points').checked) {
            quoteBaseGrandTotal -= <?php echo(float)$this->getCurrencyAmount(); ?>;
            rewardPointsSubstracted = true;
        } else if (rewardPointsSubstracted && !$('use_reward_points').checked) {
            quoteBaseGrandTotal += <?php echo(float)$this->getCurrencyAmount(); ?>;
            rewardPointsSubstracted = false;
        }
        if (quoteBaseGrandTotal < 0.0001) {
            var elements = Form.getElements(this.form);
            for(var i=0; i<elements.length; i++) {
                if ($('use_reward_points').checked) {
                    if (elements[i].name == 'payment[method]') {
                        elements[i].disabled = true;
                    }
                }
                if (elements[i].name == 'payment[method]' && elements[i].value == 'free') {
                    elements[i].checked = false;
                    elements[i].disabled = true;
                   (elements[i].parentNode).hide();
                }
            }
            if ($('use_reward_points').checked) {
                $('checkout-payment-method-load').hide();
            }
        } else {
            var elements = Form.getElements(this.form);
            for(var i=0; i<elements.length; i++) {
                if (elements[i].name == 'payment[method]') {
                    elements[i].disabled = false;
                }
            }
            $('checkout-payment-method-load').show();
        }
    }
    if (payment) {
        var rewardPaymentInit = function() {
            if ($('use_reward_points')) {
                $('use_reward_points').disabled = false;
            }
            this.switchRewardPointsCheckbox();
        }
        payment.addAfterInitFunction('reward', rewardPaymentInit.bind(payment));
        var rewardPaymentValidate = function() {
            if (quoteBaseGrandTotal < 0.0001) {
                return true;
            }
            return false;
        }
        payment.addBeforeValidateFunction('reward', rewardPaymentValidate.bind(payment));
    }
    Event.observe($('use_reward_points'), 'change', payment.switchRewardPointsCheckbox);
//]]>
</script>
<?php endif; ?>
